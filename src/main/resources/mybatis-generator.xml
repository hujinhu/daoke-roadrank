<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE generatorConfiguration PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN" "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd" >
<generatorConfiguration>
	<!-- 此处路径自己配置 -->
	<classPathEntry
		location="/Users/hujinhu/.m2/repository/mysql/mysql-connector-java/5.1.30/mysql-connector-java-5.1.30.jar" />
	<!-- <classPathEntry location="/Users/szg/work/maven/repo/mysql/mysql-connector-java/5.1.21/mysql-connector-java-5.1.21.jar" /> -->

	<context id="context1" targetRuntime="MyBatis3">
		<plugin type="org.mybatis.generator.plugins.RenameExampleClassPlugin">
			<property name="searchString" value="Example" />
			<property name="replaceString" value="Criteria" />
		</plugin>
		<plugin type="org.mybatis.generator.plugins.SerializablePlugin" />



		<jdbcConnection driverClass="com.mysql.jdbc.Driver" connectionURL="jdbc:mysql://192.168.1.3:3306/weme_car?characterEncoding=utf-8" userId="root" password="jjd$AE#FVhdshfUSKMK" />
		<!-- 此处是将Example改名为Criteria 当然 想改成什么都行 -->

		<!--DTO的路径 -->
		<javaModelGenerator targetPackage="me.daoke.roadrank.dto"
			targetProject="daoke-roadrank-web">
			<property name="enableSubPackages" value="true" />
			<property name="trimStrings" value="true" />
		</javaModelGenerator>
		<!--生成SQL-XML的路径 -->
		<sqlMapGenerator targetPackage="mapper.roadrank"
			targetProject="daoke-roadrank-web/src/main/resources">
			<property name="enableSubPackages" value="true" />
		</sqlMapGenerator>
		<!--DAO的路径 -->
		<javaClientGenerator targetPackage="me.daoke.roadrank.dao"
			targetProject="daoke-roadrank-web" type="XMLMAPPER">
			<property name="enableSubPackages" value="true" />
		</javaClientGenerator>





		<table tableName="userInfo" domainObjectName="UserInfo">
	<!-- 如果设置为true，生成的model类会直接使用column本身的名字，而不会再使用驼峰命名方法，比如BORN_DATE，生成的属性名字就是BORN_DATE,而不会是bornDate -->
			<property name="useActualColumnNames" value="true" />
			<generatedKey column="id" sqlStatement="MySql" identity="true" />
		</table>


	</context>
</generatorConfiguration>