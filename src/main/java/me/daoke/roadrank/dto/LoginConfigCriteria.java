package me.daoke.roadrank.dto;

import java.util.ArrayList;
import java.util.List;

public class LoginConfigCriteria {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table loginconfig
     *
     * @mbggenerated Sun Apr 24 11:10:05 CST 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table loginconfig
     *
     * @mbggenerated Sun Apr 24 11:10:05 CST 2016
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table loginconfig
     *
     * @mbggenerated Sun Apr 24 11:10:05 CST 2016
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table loginconfig
     *
     * @mbggenerated Sun Apr 24 11:10:05 CST 2016
     */
    public LoginConfigCriteria() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table loginconfig
     *
     * @mbggenerated Sun Apr 24 11:10:05 CST 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table loginconfig
     *
     * @mbggenerated Sun Apr 24 11:10:05 CST 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table loginconfig
     *
     * @mbggenerated Sun Apr 24 11:10:05 CST 2016
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table loginconfig
     *
     * @mbggenerated Sun Apr 24 11:10:05 CST 2016
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table loginconfig
     *
     * @mbggenerated Sun Apr 24 11:10:05 CST 2016
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table loginconfig
     *
     * @mbggenerated Sun Apr 24 11:10:05 CST 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table loginconfig
     *
     * @mbggenerated Sun Apr 24 11:10:05 CST 2016
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table loginconfig
     *
     * @mbggenerated Sun Apr 24 11:10:05 CST 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table loginconfig
     *
     * @mbggenerated Sun Apr 24 11:10:05 CST 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table loginconfig
     *
     * @mbggenerated Sun Apr 24 11:10:05 CST 2016
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table loginconfig
     *
     * @mbggenerated Sun Apr 24 11:10:05 CST 2016
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andAppKeyIsNull() {
            addCriterion("appKey is null");
            return (Criteria) this;
        }

        public Criteria andAppKeyIsNotNull() {
            addCriterion("appKey is not null");
            return (Criteria) this;
        }

        public Criteria andAppKeyEqualTo(String value) {
            addCriterion("appKey =", value, "appKey");
            return (Criteria) this;
        }

        public Criteria andAppKeyNotEqualTo(String value) {
            addCriterion("appKey <>", value, "appKey");
            return (Criteria) this;
        }

        public Criteria andAppKeyGreaterThan(String value) {
            addCriterion("appKey >", value, "appKey");
            return (Criteria) this;
        }

        public Criteria andAppKeyGreaterThanOrEqualTo(String value) {
            addCriterion("appKey >=", value, "appKey");
            return (Criteria) this;
        }

        public Criteria andAppKeyLessThan(String value) {
            addCriterion("appKey <", value, "appKey");
            return (Criteria) this;
        }

        public Criteria andAppKeyLessThanOrEqualTo(String value) {
            addCriterion("appKey <=", value, "appKey");
            return (Criteria) this;
        }

        public Criteria andAppKeyLike(String value) {
            addCriterion("appKey like", value, "appKey");
            return (Criteria) this;
        }

        public Criteria andAppKeyNotLike(String value) {
            addCriterion("appKey not like", value, "appKey");
            return (Criteria) this;
        }

        public Criteria andAppKeyIn(List<String> values) {
            addCriterion("appKey in", values, "appKey");
            return (Criteria) this;
        }

        public Criteria andAppKeyNotIn(List<String> values) {
            addCriterion("appKey not in", values, "appKey");
            return (Criteria) this;
        }

        public Criteria andAppKeyBetween(String value1, String value2) {
            addCriterion("appKey between", value1, value2, "appKey");
            return (Criteria) this;
        }

        public Criteria andAppKeyNotBetween(String value1, String value2) {
            addCriterion("appKey not between", value1, value2, "appKey");
            return (Criteria) this;
        }

        public Criteria andBaseIsNull() {
            addCriterion("base is null");
            return (Criteria) this;
        }

        public Criteria andBaseIsNotNull() {
            addCriterion("base is not null");
            return (Criteria) this;
        }

        public Criteria andBaseEqualTo(String value) {
            addCriterion("base =", value, "base");
            return (Criteria) this;
        }

        public Criteria andBaseNotEqualTo(String value) {
            addCriterion("base <>", value, "base");
            return (Criteria) this;
        }

        public Criteria andBaseGreaterThan(String value) {
            addCriterion("base >", value, "base");
            return (Criteria) this;
        }

        public Criteria andBaseGreaterThanOrEqualTo(String value) {
            addCriterion("base >=", value, "base");
            return (Criteria) this;
        }

        public Criteria andBaseLessThan(String value) {
            addCriterion("base <", value, "base");
            return (Criteria) this;
        }

        public Criteria andBaseLessThanOrEqualTo(String value) {
            addCriterion("base <=", value, "base");
            return (Criteria) this;
        }

        public Criteria andBaseLike(String value) {
            addCriterion("base like", value, "base");
            return (Criteria) this;
        }

        public Criteria andBaseNotLike(String value) {
            addCriterion("base not like", value, "base");
            return (Criteria) this;
        }

        public Criteria andBaseIn(List<String> values) {
            addCriterion("base in", values, "base");
            return (Criteria) this;
        }

        public Criteria andBaseNotIn(List<String> values) {
            addCriterion("base not in", values, "base");
            return (Criteria) this;
        }

        public Criteria andBaseBetween(String value1, String value2) {
            addCriterion("base between", value1, value2, "base");
            return (Criteria) this;
        }

        public Criteria andBaseNotBetween(String value1, String value2) {
            addCriterion("base not between", value1, value2, "base");
            return (Criteria) this;
        }

        public Criteria andRoadRankIsNull() {
            addCriterion("roadRank is null");
            return (Criteria) this;
        }

        public Criteria andRoadRankIsNotNull() {
            addCriterion("roadRank is not null");
            return (Criteria) this;
        }

        public Criteria andRoadRankEqualTo(String value) {
            addCriterion("roadRank =", value, "roadRank");
            return (Criteria) this;
        }

        public Criteria andRoadRankNotEqualTo(String value) {
            addCriterion("roadRank <>", value, "roadRank");
            return (Criteria) this;
        }

        public Criteria andRoadRankGreaterThan(String value) {
            addCriterion("roadRank >", value, "roadRank");
            return (Criteria) this;
        }

        public Criteria andRoadRankGreaterThanOrEqualTo(String value) {
            addCriterion("roadRank >=", value, "roadRank");
            return (Criteria) this;
        }

        public Criteria andRoadRankLessThan(String value) {
            addCriterion("roadRank <", value, "roadRank");
            return (Criteria) this;
        }

        public Criteria andRoadRankLessThanOrEqualTo(String value) {
            addCriterion("roadRank <=", value, "roadRank");
            return (Criteria) this;
        }

        public Criteria andRoadRankLike(String value) {
            addCriterion("roadRank like", value, "roadRank");
            return (Criteria) this;
        }

        public Criteria andRoadRankNotLike(String value) {
            addCriterion("roadRank not like", value, "roadRank");
            return (Criteria) this;
        }

        public Criteria andRoadRankIn(List<String> values) {
            addCriterion("roadRank in", values, "roadRank");
            return (Criteria) this;
        }

        public Criteria andRoadRankNotIn(List<String> values) {
            addCriterion("roadRank not in", values, "roadRank");
            return (Criteria) this;
        }

        public Criteria andRoadRankBetween(String value1, String value2) {
            addCriterion("roadRank between", value1, value2, "roadRank");
            return (Criteria) this;
        }

        public Criteria andRoadRankNotBetween(String value1, String value2) {
            addCriterion("roadRank not between", value1, value2, "roadRank");
            return (Criteria) this;
        }

        public Criteria andSicongIsNull() {
            addCriterion("sicong is null");
            return (Criteria) this;
        }

        public Criteria andSicongIsNotNull() {
            addCriterion("sicong is not null");
            return (Criteria) this;
        }

        public Criteria andSicongEqualTo(String value) {
            addCriterion("sicong =", value, "sicong");
            return (Criteria) this;
        }

        public Criteria andSicongNotEqualTo(String value) {
            addCriterion("sicong <>", value, "sicong");
            return (Criteria) this;
        }

        public Criteria andSicongGreaterThan(String value) {
            addCriterion("sicong >", value, "sicong");
            return (Criteria) this;
        }

        public Criteria andSicongGreaterThanOrEqualTo(String value) {
            addCriterion("sicong >=", value, "sicong");
            return (Criteria) this;
        }

        public Criteria andSicongLessThan(String value) {
            addCriterion("sicong <", value, "sicong");
            return (Criteria) this;
        }

        public Criteria andSicongLessThanOrEqualTo(String value) {
            addCriterion("sicong <=", value, "sicong");
            return (Criteria) this;
        }

        public Criteria andSicongLike(String value) {
            addCriterion("sicong like", value, "sicong");
            return (Criteria) this;
        }

        public Criteria andSicongNotLike(String value) {
            addCriterion("sicong not like", value, "sicong");
            return (Criteria) this;
        }

        public Criteria andSicongIn(List<String> values) {
            addCriterion("sicong in", values, "sicong");
            return (Criteria) this;
        }

        public Criteria andSicongNotIn(List<String> values) {
            addCriterion("sicong not in", values, "sicong");
            return (Criteria) this;
        }

        public Criteria andSicongBetween(String value1, String value2) {
            addCriterion("sicong between", value1, value2, "sicong");
            return (Criteria) this;
        }

        public Criteria andSicongNotBetween(String value1, String value2) {
            addCriterion("sicong not between", value1, value2, "sicong");
            return (Criteria) this;
        }

        public Criteria andUserInfoIsNull() {
            addCriterion("userInfo is null");
            return (Criteria) this;
        }

        public Criteria andUserInfoIsNotNull() {
            addCriterion("userInfo is not null");
            return (Criteria) this;
        }

        public Criteria andUserInfoEqualTo(String value) {
            addCriterion("userInfo =", value, "userInfo");
            return (Criteria) this;
        }

        public Criteria andUserInfoNotEqualTo(String value) {
            addCriterion("userInfo <>", value, "userInfo");
            return (Criteria) this;
        }

        public Criteria andUserInfoGreaterThan(String value) {
            addCriterion("userInfo >", value, "userInfo");
            return (Criteria) this;
        }

        public Criteria andUserInfoGreaterThanOrEqualTo(String value) {
            addCriterion("userInfo >=", value, "userInfo");
            return (Criteria) this;
        }

        public Criteria andUserInfoLessThan(String value) {
            addCriterion("userInfo <", value, "userInfo");
            return (Criteria) this;
        }

        public Criteria andUserInfoLessThanOrEqualTo(String value) {
            addCriterion("userInfo <=", value, "userInfo");
            return (Criteria) this;
        }

        public Criteria andUserInfoLike(String value) {
            addCriterion("userInfo like", value, "userInfo");
            return (Criteria) this;
        }

        public Criteria andUserInfoNotLike(String value) {
            addCriterion("userInfo not like", value, "userInfo");
            return (Criteria) this;
        }

        public Criteria andUserInfoIn(List<String> values) {
            addCriterion("userInfo in", values, "userInfo");
            return (Criteria) this;
        }

        public Criteria andUserInfoNotIn(List<String> values) {
            addCriterion("userInfo not in", values, "userInfo");
            return (Criteria) this;
        }

        public Criteria andUserInfoBetween(String value1, String value2) {
            addCriterion("userInfo between", value1, value2, "userInfo");
            return (Criteria) this;
        }

        public Criteria andUserInfoNotBetween(String value1, String value2) {
            addCriterion("userInfo not between", value1, value2, "userInfo");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table loginconfig
     *
     * @mbggenerated do_not_delete_during_merge Sun Apr 24 11:10:05 CST 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table loginconfig
     *
     * @mbggenerated Sun Apr 24 11:10:05 CST 2016
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}